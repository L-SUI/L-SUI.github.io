(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{385:function(t,a,r){"use strict";r.r(a);var e=r(25),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"设计模式简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计模式简介"}},[t._v("#")]),t._v(" 设计模式简介")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F_(%E8%AE%A1%E7%AE%97%E6%9C%BA)",target:"_blank",rel:"noopener noreferrer"}},[t._v("维基百科介绍"),r("OutboundLink")],1)]),t._v(" "),r("h2",{attrs:{id:"导论"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#导论"}},[t._v("#")]),t._v(" 导论")]),t._v(" "),r("p",[t._v("《设计模式》一书自1995年以来，一直是程序员谈论的"),r("code",[t._v("高端")]),t._v("话题之一；许多程序员从设计模式中学到了设计软件的灵感，或者找到了问题的解决方；在社区中，即有人对模式无比的崇拜，也有人对模式充满无解；有些人把设计模式视为圣经，唯模式至上；有些人却认为设计模式只在C++或者Java中有用武之地，JavaScript这种动态语言没有设计模式一说。")]),t._v(" "),r("h2",{attrs:{id:"起源"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#起源"}},[t._v("#")]),t._v(" 起源")]),t._v(" "),r("p",[t._v("设计模式并非是软件开发中的专业术语，实际上"),r("code",[t._v("模式")]),t._v("最早诞生于建筑学；20世纪70年代，哈佛大学建筑学博士和他的研究团队花了约20年的时间，研究了为解决同一问题而设计出不同的结构建筑，从中发现了那些高质量设计中的相似性，并且用"),r("code",[t._v("模式")]),t._v("来指代相似性。")]),t._v(" "),r("h2",{attrs:{id:"怎么理解呢？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#怎么理解呢？"}},[t._v("#")]),t._v(" 怎么理解呢？")]),t._v(" "),r("p",[t._v("设计模式（Design pattern）是一套被反复使用、思想成熟、经过分类和无数"),r("code",[t._v("实战设计经验")]),t._v("的总结的。使用设计模式是为了让系统代码可重用、可扩展、可解耦、更容易被人理解且能保证代码的可靠性。设计模式使代码开发真正工程化；设计模式是软件工程的基石脉络，如同大厦的结构一样，只有夯实地基搭好结构，才能盖好健壮的大楼。")]),t._v(" "),r("h2",{attrs:{id:"一句话"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一句话"}},[t._v("#")]),t._v(" 一句话")]),t._v(" "),r("p",[t._v("设计模式是指在面向软件设计过程中针对特定问题的简洁而优雅的解决方案，好维护，保证了代码的健壮性，不是为了解决性能。")])])}),[],!1,null,null,null);a.default=s.exports}}]);