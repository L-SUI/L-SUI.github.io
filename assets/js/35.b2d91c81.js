(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{382:function(e,s,o){"use strict";o.r(s);var r=o(42),t=Object(r.a)({},(function(){var e=this,s=e.$createElement,o=e._self._c||s;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"手写-promise"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#手写-promise"}},[e._v("#")]),e._v(" 手写 Promise")]),e._v(" "),o("h2",{attrs:{id:"promise-自身的状态"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#promise-自身的状态"}},[e._v("#")]),e._v(" Promise 自身的状态")]),e._v(" "),o("p",[e._v("1、state 存放当前的状态。")]),e._v(" "),o("p",[e._v("2、value 存放当前状态的值。")]),e._v(" "),o("p",[e._v("3、then 方法，返回值也是一个 Promise。")]),e._v(" "),o("p",[e._v("4、catch 方法。")]),e._v(" "),o("p",[e._v("5、finally 方法。")]),e._v(" "),o("p",[e._v("5、静态方法，如 Promise.all、Promise.resolve")]),e._v(" "),o("h2",{attrs:{id:"实战案例"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#实战案例"}},[e._v("#")]),e._v(" 实战案例")]),e._v(" "),o("p",[e._v("1、实现一个 promise ，在 setTimeout 中去 resolve。 ok")]),e._v(" "),o("p",[e._v("2、实现一个 promise，直接同步 resolve。             ok")]),e._v(" "),o("p",[e._v("3、实现一个 promise，防止 resolve 多次。            ok")]),e._v(" "),o("p",[e._v("4、实现一个 promise，可以让 then 方法链式调用。       ok")]),e._v(" "),o("p",[e._v("5、实现一个 promise，支持空 then 函数。              ok")]),e._v(" "),o("p",[e._v("6、实现一个 promise，支持 then 传递 thenable 对象。  ok")]),e._v(" "),o("p",[e._v("7、实现一个 promise，支持 then 传递 promise 对象。    ok")]),e._v(" "),o("p",[e._v("8、实现一个 promise，支持 resolve 传递 promise 对象。 ok")]),e._v(" "),o("p",[e._v("9、实现一个 promise，处理 then 中的循环 promise。     ok")]),e._v(" "),o("p",[e._v("10、实现一个 promise，支持静态方法 Promise.all。      ok")]),e._v(" "),o("p",[e._v("11、实现一个 promise，支持 reject 和 catch。         ok")]),e._v(" "),o("p",[e._v("12、实现一个 promise，支持处理完成态或失败态的then。    ok")])])}),[],!1,null,null,null);s.default=t.exports}}]);